package proyectosequence;

import java.awt.GridLayout;
import java.awt.Image;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;

/**
 *
 * @author Gabriela
 */
public class Juego extends javax.swing.JFrame {

    Tablero tablero;
    List<CartasBaraja> jugador1;
    List<CartasBaraja> jugador2;
    JButton[] mano1;
    List<JButton> mano2;
    List<JButton> mano3;
    List<JButton> mano4;

    //Imagen de parte trasera de la baraja
    ImageIcon imagenTrasero;
    ImageIcon A_corazones;
    ImageIcon A_diamantes;
    ImageIcon A_picas;
    ImageIcon A_trebol;
    HashMap<String, String> cartasConImagenes = new HashMap<>();

    /*
    //Poner las urls de acuerdo con su nombre
    private void asociarCartasConImagenes(){
         cartasConImagenes.put("A de Corazones", "/src/img/corazon/As_corazones.png");
         cartasConImagenes.put("A de Trebol", "/src/img/trebol/As_trebol.png");
         cartasConImagenes.put("A de Picas", "/src/img/picas/As_picas.png");
         cartasConImagenes.put("A de Diamantes", "/src/img/diamantes/As_diamantes.png");
         cartasConImagenes.put("2 de Corazones", "/src/img/corazon/2_corazones.png");
         cartasConImagenes.put("2 de Treboles", "/src/img/trebol/2_trebol.png");
         cartasConImagenes.put("2 de Picas", "/src/img/picas/2_picas.png");
         cartasConImagenes.put("2 de Diamantes", "/src/img/diamantes/2_diamantes.png");
    }   */
    
    public Juego(MenuInicio mainWindow) throws MalformedURLException {
        initComponents();
        mano1 = new JButton[7];
        mano1[1] = carta1;
        mano1[2] = carta2;
        mano1[3] = carta3;
        mano1[4] = carta4;
        mano1[5] = carta5;
        mano1[6] = carta6;
        //asociarCartasConImagenes();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        gamePanel.setLayout(new GridLayout(1, 1));
        setResizable(false);
        tablero = new Tablero(this, mainWindow);
        gamePanel.add(tablero);
        gamePanel.repaint();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setVisible(true);
        tablero.startTurnTimer();
        Baraja baraja = new Baraja();
        baraja.barajar();

        jugador1 = baraja.repartir(6);
        jugador2 = baraja.repartir(6);

        ponerManoAlInicio();
        ponerImagenMano(carta1);
        ponerImagenMano(carta2);
        ponerImagenMano(carta3);
        ponerImagenMano(carta4);
        ponerImagenMano(carta5);
        ponerImagenMano(carta6);

        //Textos de la mano del jugador1
        String textoJ1carta1 = jugador1.get(1 - 1).toString();
        String textoJ1carta2 = jugador1.get(2 - 1).toString();
        String textoJ1carta3 = jugador1.get(3 - 1).toString();
        String textoJ1carta4 = jugador1.get(4 - 1).toString();
        String textoJ1carta5 = jugador1.get(5 - 1).toString();
        String textoJ1carta6 = jugador1.get(6 - 1).toString();

        //Textos de la mano del jugador2
        String textoJ2carta1 = jugador2.get(1 - 1).toString();
        String textoJ2carta2 = jugador2.get(2 - 1).toString();
        String textoJ2carta3 = jugador2.get(3 - 1).toString();
        String textoJ2carta4 = jugador2.get(4 - 1).toString();
        String textoJ2carta5 = jugador2.get(5 - 1).toString();
        String textoJ2carta6 = jugador2.get(6 - 1).toString();
    }

    public JLabel getTimerLabel() {
        return timer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        timer = new javax.swing.JLabel();
        gamePanel = new javax.swing.JPanel();
        carta1 = new javax.swing.JButton();
        carta6 = new javax.swing.JButton();
        carta2 = new javax.swing.JButton();
        carta3 = new javax.swing.JButton();
        carta4 = new javax.swing.JButton();
        carta5 = new javax.swing.JButton();
        barajaDeCartas = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        timer.setFont(new java.awt.Font("Rockwell Condensed", 0, 24)); // NOI18N
        timer.setForeground(new java.awt.Color(255, 204, 255));
        timer.setText("jLabel3");
        jPanel1.add(timer, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 90, -1, -1));

        gamePanel.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 590, Short.MAX_VALUE)
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 580, Short.MAX_VALUE)
        );

        jPanel1.add(gamePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, 590, 580));

        carta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carta1ActionPerformed(evt);
            }
        });
        jPanel1.add(carta1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 610, 100, 110));
        jPanel1.add(carta6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 610, 100, 110));
        jPanel1.add(carta2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 610, 100, 110));
        jPanel1.add(carta3, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 610, 100, 110));
        jPanel1.add(carta4, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 610, 100, 110));
        jPanel1.add(carta5, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 610, 100, 110));

        barajaDeCartas.setBackground(new java.awt.Color(255, 255, 255));
        barajaDeCartas.setText("parte trasera mazo");
        barajaDeCartas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        barajaDeCartas.setOpaque(true);
        jPanel1.add(barajaDeCartas, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 610, 100, 110));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1213, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 806, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void carta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carta1ActionPerformed

        //La idea es que se iluminen las cartas
        String textocarta1 = carta1.getText();
        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 10; j++) {
                if (tablero.casillas[i][j].carta.getNombre().equals(textocarta1)) {
                    //tablero.casillas[i][j].
                }
            }
        }
    }//GEN-LAST:event_carta1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Juego(null).setVisible(true);
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Juego.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private void ponerManoAlInicio() {
        carta1.setText(jugador1.get(1 - 1).toString());
        carta2.setText(jugador1.get(2 - 1).toString());
        carta3.setText(jugador1.get(3 - 1).toString());
        carta4.setText(jugador1.get(4 - 1).toString());
        carta5.setText(jugador1.get(5 - 1).toString());
        carta6.setText(jugador1.get(6 - 1).toString());
    }

    private void ponerImagenMano(JButton boton) {
        String textoDeCartaAgarrada = boton.getText();

        //ruta de la imagen
        String rutaImagen = "/img/" + textoDeCartaAgarrada + ".png";

        URL urlCartaAgarrada = getClass().getResource(rutaImagen);

        if (urlCartaAgarrada != null) {
            ImageIcon imagenCarta = new ImageIcon(urlCartaAgarrada);
            int nuevoAncho = 90;
            int nuevoAlto = 100;
            Image imagenRedimensionada = imagenCarta.getImage().getScaledInstance(nuevoAncho, nuevoAlto, Image.SCALE_SMOOTH);

            boton.setIcon(new ImageIcon(imagenRedimensionada));
        } else {
            System.err.println("No se pudo encontrar la imagen en la ruta: " + rutaImagen);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel barajaDeCartas;
    private javax.swing.JButton carta1;
    private javax.swing.JButton carta2;
    private javax.swing.JButton carta3;
    private javax.swing.JButton carta4;
    private javax.swing.JButton carta5;
    private javax.swing.JButton carta6;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel timer;
    // End of variables declaration//GEN-END:variables
}